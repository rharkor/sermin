version: "3.8"
services:
  app:
    build:
      context: .
      dockerfile: packages/app/Dockerfile
    container_name: sermin_app
    restart: unless-stopped
    env_file:
      - .env
    logging:
      driver: json-file
      options:
        max-size: 50m
    ports:
      - 3000:3000
    depends_on:
      - redis
      - db
    networks:
      - default
  wss:
    build:
      context: .
      dockerfile: packages/app/src/server/Dockerfile
    container_name: sermin_wss
    restart: unless-stopped
    env_file:
      - .env
    logging:
      driver: json-file
      options:
        max-size: 50m
    depends_on:
      - app
      - redis
      - db
    ports:
      - 3001:3001
    networks:
      - default
  cron:
    build:
      context: .
      dockerfile: packages/cron/Dockerfile
    container_name: sermin_crons
    env_file:
      - .env
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: 50m
    depends_on:
      - app
      - wss
      - redis
      - db
    networks:
      - default
  db:
    image: postgres:latest
    container_name: sermin_db
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - sermin-postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASS}
      POSTGRES_DB: ${DATABASE_NAME}
    logging:
      driver: json-file
      options:
        max-size: 50m
    ports:
      - 5432:5432
    networks:
      - default
  redis:
    image: redis:latest
    restart: unless-stopped
    container_name: sermin_redis
    env_file:
      - .env
    command: /bin/sh -c "redis-server --requirepass ${REDIS_PASSWORD}"
    logging:
      driver: json-file
      options:
        max-size: 50m
    volumes:
      - sermin-redis-data:/data
    ports:
      - 6379:6379
    networks:
      - default

volumes:
  sermin-postgres-data: null
  sermin-redis-data: null

networks:
  default:
    driver: bridge
